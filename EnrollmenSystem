import java.util.ArrayList;
import java.util.List;

// Student class to represent students
class Student {
    private int studentId;
    private String name;

    public Student(int studentId, String name) {
        this.studentId = studentId;
        this.name = name;
    }

    public int getStudentId() {
        return studentId;
    }

    public String getName() {
        return name;
    }
}

// Course class to represent courses
class Course {
    private int courseId;
    private String courseName;

    public Course(int courseId, String courseName) {
        this.courseId = courseId;
        this.courseName = courseName;
    }

    public int getCourseId() {
        return courseId;
    }

    public String getCourseName() {
        return courseName;
    }
}

// EnrollmentSystem class to manage enrollments
class EnrollmentSystem {
    private List<Student> students;
    private List<Course> courses;

    public EnrollmentSystem() {
        students = new ArrayList<>();
        courses = new ArrayList<>();
    }

    // Add a student to the system
    public void addStudent(int studentId, String name) {
        students.add(new Student(studentId, name));
    }

    // Add a course to the system
    public void addCourse(int courseId, String courseName) {
        courses.add(new Course(courseId, courseName));
    }

    // Enroll a student in a course
    public void enrollStudent(int studentId, int courseId) {
        Student student = findStudent(studentId);
        Course course = findCourse(courseId);

        if (student != null && course != null) {
            // Implement your enrollment logic here
            // For example, you can add the student to the course's list of enrolled students
        }
    }

    // Find a student by studentId
    private Student findStudent(int studentId) {
        for (Student student : students) {
            if (student.getStudentId() == studentId) {
                return student;
            }
        }
        return null;
    }

    // Find a course by courseId
    private Course findCourse(int courseId) {
        for (Course course : courses) {
            if (course.getCourseId() == courseId) {
                return course;
            }
        }
        return null;
    }
}

public class Main {
    public static void main(String[] args) {
        EnrollmentSystem enrollmentSystem = new EnrollmentSystem();

        // Adding students and courses
        enrollmentSystem.addStudent(1, "John Doe");
        enrollmentSystem.addStudent(2, "Jane Smith");
        enrollmentSystem.addCourse(101, "Math 101");
        enrollmentSystem.addCourse(102, "English 101");

        // Enrolling students in courses
        enrollmentSystem.enrollStudent(1, 101);
        enrollmentSystem.enrollStudent(2, 101);
    }
}
